CREATE OR REPLACE PACKAGE EMPPACK IS
PROCEDURE UPD_SAL(jobtype in varchar2,minsal in number,maxsal in number);
FUNCTION GET_SERVICE_YRS(eno in number) RETURN number;
END EMPPACK;

create or replace package body EMPPACK
as
 procedure UPD_SAL(jobtype in varchar2,minsal in number,maxsal in number) is
salaryexp EXCEPTION;
joba emp1.job%type;
invalidjob EXCEPTION;
currsal emp1.sal%type;
begin
SELECT MIN(SAL) into currsal from emp1 where job = jobtype;
SELECT distinct job into joba from emp1 where job =jobtype;
if (joba != jobtype) then
RAISE_APPLICATION_ERROR(-20457,'Invalid JOB');
end if;
if (minsal > maxsal) then
RAISE_APPLICATION_ERROR(-20456,'Max sal is less than min sal');
elsif (minsal < maxsal)then
UPDATE emp1 set sal = maxsal where job = jobtype and sal < maxsal;
dbms_output.put_line(' Max salary is updated :' || currsal);
end if;
exception
when salaryexp then
RAISE_APPLICATION_ERROR(-20500,'Maximum salary is less than Maximum sal');
dbms_output.put_line('Maximum salary is less than Maximum sal ');
RAISE_APPLICATION_ERROR(-20501,'Invalid JOB Type');
dbms_output.put_line('Invalid Job Type');
end UPD_SAL;

function GET_SERVICE_YRS(eno in number) return number
 is
vexp number:=0;
begin
select round(to_char(sysdate-hiredate)/365) into vexp from emp1 where empno = eno;
return vexp ;
end GET_SERVICE_YRS;
end emppack;
/

 

execute emppack.UPD_SAL('SALESMAN',1550,1590);
select emppack.GET_SERVICE_YRS(7369)from dual;

select * from emp1 where JOB='SALESMAN'
